<div class="row">

    <div class="panel panel-primary">
        <div class="panel-heading clearfix">
            <div class="panel-title">
                <div class="navbar-form pull-left">
                    <span>Manage Brand</span>
                </div>
                <div class="navbar-form pull-right">
                    @*<a href="#" class="btn btn-default  btn-group-lg ">Search</a>*@
                    <div class="col-lg-pull-10">
                        <div class="input-group">
                            <input type="text" id="searchBox" class="form-control" placeholder="Enter brand name">
                            <span class="input-group-btn">
                                <button id="searchButton" class="btn btn-default" type="button">Search</button>
                            </span>
                        </div><!-- /input-group -->
                    </div><!-- /.col-sm-3 -->
                </div>
            </div>
        </div>

        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Brand Id</th>
                                <th>Image</th>
                                <th>Brand Name</th>
                                <th>Category</th>
                                <th>No. of Products</th>
                                <th>Created At</th>
                                <th>Updated At</th>


                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                            </tr>
                        </thead>
                        <tbody id="brandTableBody"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{

    <script>


    loadBrandData();


    //On keystroke in searchbar, show results

    $("#searchBox").keyup(function () {
        //alert("Keyup triggered!");
        var searchQuery = $.trim(this.value);
        var searchWebFormData = new webFormData(searchQuery);
        var searchWebFormDataString = JSON.stringify(searchWebFormData);

        var $searchBrandDataHandler = $.ajax({
            url: '/API/Categories/SearchBrand',
            method: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            data: "'"+searchWebFormDataString+"'"
        });

        $searchBrandDataHandler.done(function (data, textStatus, jqXHR) {
            $('#brandTableBody').empty();

            console.log(data);

            var brandList = data;
            var brandId = '';
            //var brandImageUrl = '';
            var brandName = '';
            var category = '';
            var noOfProducts = '';
            var createdAt = '';
            var updatedAt = '';
            var $tableElement = null;
            var $cellElement = null;
            var $rowElement = null;
            //-------- Find the table element -----------
            //I am using the $tableElement variable
            //to represent the found HTML element which has a matching id of employeeTableBody
            $tableBodyElement = $('#brandTableBody');

            //I want to build rows and cells (using tr and td HTML elements) so that
            //I can display full name, join date, created at, updated at information
            //within the HTML table element, employeeTableBody. Recall that, I have already asked the
            //$tableBodyElement variable to represent (reference) the table element.

            //-------- Begin creating <tr> and <td> HTML element ------
            for (index = 0; index < brandList.length; index++) {
                //Set this employee variable to reference an object
                //inside the employeeList Array.
                var brand = brandList[index];
                //Copy out the course information
                brandId = brand.brandId;
                brandName = brand.brandName;
                category = brand.categoryName;
                noOfProducts = brand.noOfProducts;
                var $brandPhotoImageElement = $('<img>').attr('src', brand.imageUrl);
                $brandPhotoImageElement.attr('height', '60%');
                $brandPhotoImageElement.attr('width', '60%');
                createdAt = moment(brand.createdAt).format("DD/MM/YYYY HH:MM");
                updatedAt = moment(brand.updatedAt).format("DD/MM/YYYY HH:MM");


                ////Create new HTML <tr> element.
                ////At the same time let the $rowElement variable to represent it.
                $rowElement = $('<tr></tr>');
                //Create the 1st cell element which display Brand Id
                $cellElement = $('<td></td>', { text: brandId });
                $rowElement.append($cellElement);

                ////Create the 2nd cell element which display Brand Photo
                $cellElement = $('<td></td>');
                $cellElement.append($brandPhotoImageElement);
                $rowElement.append($cellElement);

                //Create the 3rd cell element which display Brand Name
                $cellElement = $('<td></td>', { text: brandName });
                $rowElement.append($cellElement);

                //Create the 4th cell element which display Categories Associated
                $cellElement = $('<td></td>', { text: category });
                $rowElement.append($cellElement);

                //Create the 5th cell element which display No of Products
                $cellElement = $('<td></td>', { text: noOfProducts });
                $rowElement.append($cellElement);

                //Create the 6th cell element which display Created At
                $cellElement = $('<td></td>', { text: createdAt });
                $rowElement.append($cellElement);

                //Create the 7th cell element which display Updated At
                $cellElement = $('<td></td>', { text: updatedAt });
                $rowElement.append($cellElement);

                //---------------- Using jQuery() to create the hyperlink element using the <a></a> --------
                $hyperLinkElement = $('<a>Update Brand</a>').attr('href', '/Brands/Update/' + brandId);
                $hyperLinkElement.addClass('btn btn-primary');
                //The $hyperLinkElement eventually represents (references) a HTML element which is:
                //<a href="<base url>/Employees/<employee id>" class="btn btn-primary" >Update Employee</a>
                //-----------------Using jQuery() to creating the 5th cell for the row----------------------
                $cellElement = $('<td></td>');
                //-----------------Add the previous created hyperlink element, $hyperLinkElement
                //                 into the newly created 6th cell.
                //As a result, $cellElement references an element defined by:
                //<td><a href="<base url>/Employees/<employee id>" class="btn btn-primary" >Update Employee</a></td>
                $cellElement.append($hyperLinkElement);
                $rowElement.append($cellElement);


                //Insert the $rowElement into the table element represented by $tableBodyElement.
                $tableBodyElement.append($rowElement);

                //----End of creating one row to display one employee by using <tr> and <td> HTML element ---
                //Proceed to the next course object in the employeeList Array.
            }//end of for loop.
        }//end of JavaScript anonymous function
       )//end of the done() method;


        $searchBrandDataHandler.fail(function (data, textStatus, jqXHR) {
            console.log(data);
            var noResultList = data;
            var noResultMessage = '';
            var $tableBodyElement = $('#brandTableBody');

            $tableBodyElement.empty();

        })//end of $loadEmployeeDataHandler.fail()

    });

    //Search Query Constructor
    function webFormData(searchQuery) {
        this.searchQuery = searchQuery;
    }



















    //Load Data Upon Launch
    function loadBrandData() {
        //Note: jQuery.ajax(..) is also often written is $.ajax(..)
        var $loadBrandDataHandler = jQuery.ajax({
            url: '/API/Brands',
            method: 'GET',
            dataType: 'json',
            cache: false
        });

            $loadBrandDataHandler.done(function (data, textStatus, jqXHR) {

                console.log(data);

                var brandList = data;
                var brandId = '';
                //var brandImageUrl = '';
                var brandName = '';
                var category = '';
                var noOfProducts = '';
                var createdAt = '';
                var updatedAt = '';
                var $tableElement = null;
                var $cellElement = null;
                var $rowElement = null;
                //-------- Find the table element -----------
                //I am using the $tableElement variable
                //to represent the found HTML element which has a matching id of employeeTableBody
                $tableBodyElement = $('#brandTableBody');

                //I want to build rows and cells (using tr and td HTML elements) so that
                //I can display full name, join date, created at, updated at information
                //within the HTML table element, employeeTableBody. Recall that, I have already asked the
                //$tableBodyElement variable to represent (reference) the table element.

                //-------- Begin creating <tr> and <td> HTML element ------
                for (index = 0; index < brandList.length; index++) {
                    //Set this employee variable to reference an object
                    //inside the employeeList Array.
                    var brand = brandList[index];
                    //Copy out the course information
                    brandId = brand.brandId;
                    brandName = brand.brandName;
                    category = brand.categoryName;
                    noOfProducts = brand.noOfProducts;
                    var $brandPhotoImageElement = $('<img>').attr('src', brand.imageUrl);
                    $brandPhotoImageElement.attr('height', '60%');
                    $brandPhotoImageElement.attr('width', '60%');
                    createdAt = moment(brand.createdAt).format("DD/MM/YYYY HH:MM");
                    updatedAt = moment(brand.updatedAt).format("DD/MM/YYYY HH:MM");


                    ////Create new HTML <tr> element.
                    ////At the same time let the $rowElement variable to represent it.
                    $rowElement = $('<tr></tr>');
                    //Create the 1st cell element which display Brand Id
                    $cellElement = $('<td></td>', { text: brandId });
                    $rowElement.append($cellElement);

                    ////Create the 2nd cell element which display Brand Photo
                    $cellElement = $('<td></td>');
                    $cellElement.append($brandPhotoImageElement);
                    $rowElement.append($cellElement);

                    //Create the 3rd cell element which display Brand Name
                    $cellElement = $('<td></td>', { text: brandName });
                    $rowElement.append($cellElement);

                    //Create the 4th cell element which display Categories Associated
                    $cellElement = $('<td></td>', { text: category });
                    $rowElement.append($cellElement);

                    //Create the 5th cell element which display No of Products
                    $cellElement = $('<td></td>', { text: noOfProducts });
                    $rowElement.append($cellElement);

                    //Create the 6th cell element which display Created At
                    $cellElement = $('<td></td>', { text: createdAt });
                    $rowElement.append($cellElement);

                    //Create the 7th cell element which display Updated At
                    $cellElement = $('<td></td>', { text: updatedAt });
                    $rowElement.append($cellElement);

                    //---------------- Using jQuery() to create the hyperlink element using the <a></a> --------
                    $hyperLinkElement = $('<a>Update Brand</a>').attr('href', '/Brands/Update/' + brandId);
                    $hyperLinkElement.addClass('btn btn-primary');
                    //The $hyperLinkElement eventually represents (references) a HTML element which is:
                    //<a href="<base url>/Employees/<employee id>" class="btn btn-primary" >Update Employee</a>
                    //-----------------Using jQuery() to creating the 5th cell for the row----------------------
                    $cellElement = $('<td></td>');
                    //-----------------Add the previous created hyperlink element, $hyperLinkElement
                    //                 into the newly created 6th cell.
                    //As a result, $cellElement references an element defined by:
                    //<td><a href="<base url>/Employees/<employee id>" class="btn btn-primary" >Update Employee</a></td>
                    $cellElement.append($hyperLinkElement);
                    $rowElement.append($cellElement);


                    //Insert the $rowElement into the table element represented by $tableBodyElement.
                    $tableBodyElement.append($rowElement);

                    //----End of creating one row to display one employee by using <tr> and <td> HTML element ---
                    //Proceed to the next course object in the employeeList Array.
                }//end of for loop.
            }//end of JavaScript anonymous function
            )//end of the done() method;
            $loadBrandDataHandler.fail(function (data, textStatus, jqXHR) {
                noty({
                    text: 'Ajax call has failed due to : ' + data.statusText, type: 'error',
                    layout: 'center',
                    template: '<div class="noty_message"><span class="noty_text"></span>'
                });//end of noty()
            })//end of $loadEmployeeDataHandler.fail()
    }//end of loadEmployeeData();

    </script>
}
